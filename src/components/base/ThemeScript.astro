<script is:inline data-astro-rerun>
  const defaultTheme = "default";

  function getTheme() {
    return localStorage.getItem("theme") || defaultTheme;
  }

  function setTheme(theme) {
    // Remove all theme classes
    document.documentElement.classList.remove("light", "theme-nature");
    
    // Add the appropriate theme class
    if (theme === "light") {
      document.documentElement.classList.add("light");
    } else if (theme === "nature") {
      document.documentElement.classList.add("theme-nature");
    }
    
    // Update localStorage
    localStorage.setItem("theme", theme);
    
    // Update button states
    updateButtonStates(theme);
  }

  function updateButtonStates(activeTheme) {
    // Remove active state from all buttons
    document.querySelectorAll('.theme-btn').forEach(btn => {
      btn.classList.remove('ring-2', 'ring-blue-500', 'ring-offset-2');
    });
    
    // Add active state to the current theme button
    const activeButton = document.querySelector(`[data-theme="${activeTheme}"]`);
    if (activeButton) {
      activeButton.classList.add('ring-2', 'ring-blue-500', 'ring-offset-2');
    }
  }

  // This prevents flickering back to default theme before the page is fully loaded
  setTheme(getTheme());

  document.addEventListener("astro:page-load", () => {
    setTheme(getTheme());
    
    // Theme switcher buttons
    const themeButtons = document.querySelectorAll("[data-theme]");
    themeButtons.forEach((button) => {
      button.addEventListener("click", (e) => {
        const theme = e.target.getAttribute("data-theme");
        setTheme(theme);
      });
    });
  });
</script>
